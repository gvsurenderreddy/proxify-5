{"body":"# Proxify\r\n\r\nProxify takes any Ruby class and creates a proxy that fronts that class. The class can declare messages that are allowed to be proxied through.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'proxify'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install proxify\r\n\r\n## Usage\r\n\r\nHere `Foo` includes `Proxify::Me` and a list of messages that can be proxied through via the `proxy` function.\r\n\r\n`hello`, `say` and `tell` are allowed to be called and are argument less, with arguments and with block examples.  `goodbye` is not proxied and will raise an `UndefinedMethod` error.\r\n\r\n    class Foo\r\n      include Proxify::Me\r\n\r\n      proxy :hello, :say, :tell\r\n\r\n      def hello\r\n        \"world\"\r\n      end\r\n\r\n      def goodbye\r\n        \"world\"\r\n      end\r\n\r\n      def say(something)\r\n        something\r\n      end\r\n\r\n      def tell\r\n        yield\r\n      end\r\n\r\n    end\r\n\r\nTo create the proxy, call the `proxify` method, this will return a `FooProxy` type.\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"UA-26466641-1","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Proxify","tagline":""}